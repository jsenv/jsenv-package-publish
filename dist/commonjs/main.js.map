{"version":3,"file":"main.js","sources":["/node_modules/@jsenv/logger/src/createLogger/LOG_LEVELS.js","/node_modules/@jsenv/logger/src/createLogger/createLogger.js","/node_modules/@jsenv/bundling/src/generateBabelPluginMapOption/import-meta-commonjs.js","/src/autoPublish/fetchLatestInRegistry.js","/node_modules/@jsenv/operating-system-path/src/starts-with-windows-drive-letter.js","/node_modules/@jsenv/operating-system-path/src/replace-slashes-with-backslashes.js","/node_modules/@jsenv/operating-system-path/src/pathname-to-operating-system-path.js","/node_modules/@jsenv/operating-system-path/src/is-windows-path.js","/node_modules/@jsenv/operating-system-path/src/replace-back-slashes-with-slashes.js","/node_modules/@jsenv/operating-system-path/src/operating-system-path-to-pathname.js","/src/autoPublish/setNpmConfig.js","/src/autoPublish/publish.js","/src/readProjectPackage.js","/src/autoPublish/autoPublish.js","/src/autoReleaseOnGithub/getGithubRelease.js","/src/autoReleaseOnGithub/createGithubRelease.js","/src/autoReleaseOnGithub/autoReleaseOnGithub.js"],"sourcesContent":["export const LOG_LEVEL_OFF = \"off\"\n\nexport const LOG_LEVEL_DEBUG = \"debug\"\n\nexport const LOG_LEVEL_INFO = \"info\"\n\nexport const LOG_LEVEL_WARN = \"warn\"\n\nexport const LOG_LEVEL_ERROR = \"error\"\n","import {\n  LOG_LEVEL_DEBUG,\n  LOG_LEVEL_INFO,\n  LOG_LEVEL_WARN,\n  LOG_LEVEL_ERROR,\n  LOG_LEVEL_OFF,\n} from \"./LOG_LEVELS.js\"\n\nexport const createLogger = ({ logLevel = LOG_LEVEL_INFO } = {}) => {\n  if (logLevel === LOG_LEVEL_DEBUG) {\n    return {\n      debug,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_INFO) {\n    return {\n      debug: debugDisabled,\n      info,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_WARN) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_ERROR) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error,\n    }\n  }\n\n  if (logLevel === LOG_LEVEL_OFF) {\n    return {\n      debug: debugDisabled,\n      info: infoDisabled,\n      warn: warnDisabled,\n      error: errorDisabled,\n    }\n  }\n\n  throw new Error(createUnexpectedLogLevelMessage({ logLevel }))\n}\n\nconst createUnexpectedLogLevelMessage = ({ logLevel }) => `unexpected logLevel.\n--- logLevel ---\n${logLevel}\n--- allowed log levels ---\n${LOG_LEVEL_OFF}\n${LOG_LEVEL_ERROR}\n${LOG_LEVEL_WARN}\n${LOG_LEVEL_INFO}\n${LOG_LEVEL_DEBUG}\n`\n\nconst debug = console.debug\n\nconst debugDisabled = () => {}\n\nconst info = console.info\n\nconst infoDisabled = () => {}\n\nconst warn = console.warn\n\nconst warnDisabled = () => {}\n\nconst error = console.error\n\nconst errorDisabled = () => {}\n","// eslint-disable-next-line import/no-unresolved\nimport importMap from \"/importMap.json\"\nimport { normalizeImportMap } from \"@jsenv/import-map/src/normalizeImportMap/normalizeImportMap.js\"\nimport { resolveImport } from \"@jsenv/import-map/src/resolveImport/resolveImport.js\"\n\nconst nodeRequire = require\nexport { nodeRequire as require }\n\nconst filenameContainsBackSlashes = __filename.indexOf(\"\\\\\") > -1\n\nexport const url = filenameContainsBackSlashes\n  ? `file://${__filename.replace(/\\\\/g, \"/\")}`\n  : `file://${__filename}`\n\nexport const resolve = (specifier) => {\n  return resolveImport({\n    specifier,\n    importer: url,\n    importMap: memoizedGetImportMap(),\n    defaultExtension: false,\n  })\n}\n\n// better for perf and helps rollup to tree shake this out\n// when import.meta.resolve is not used\nlet memoizedImportMap\nconst memoizedGetImportMap = () => {\n  if (memoizedImportMap) return memoizedImportMap\n  memoizedImportMap = normalizeImportMap(importMap, url)\n  return memoizedImportMap\n}\n","// https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md#getpackageversion\n// https://github.com/npm/registry-issue-archive/issues/34\n// https://stackoverflow.com/questions/53212849/querying-information-about-specific-version-of-scoped-npm-package\n\nconst fetch = import.meta.require(\"node-fetch\")\n\nexport const fetchLatestInRegistry = async ({ registryUrl, packageName, token }) => {\n  const requestUrl = `${registryUrl}/${packageName}`\n  const response = await fetch(requestUrl, {\n    headers: {\n      // \"user-agent\": \"jsenv\",\n      accept: \"application/vnd.npm.install-v1+json; q=1.0, application/json; q=0.8, */*\",\n      ...(token ? { authorization: `token ${token}` } : {}),\n    },\n    method: \"GET\",\n  })\n\n  const responseStatus = response.status\n\n  if (responseStatus === 404) {\n    return null\n  }\n\n  if (responseStatus !== 200) {\n    throw new Error(\n      writeUnexpectedResponseStatus({\n        requestUrl,\n        responseStatus,\n        responseText: await response.text(),\n      }),\n    )\n  }\n\n  const packageObject = await response.json()\n  return packageObject.versions[packageObject[\"dist-tags\"].latest]\n}\n\nconst writeUnexpectedResponseStatus = ({\n  requestUrl,\n  responseStatus,\n  responseText,\n}) => `package registry response status should be 200.\n--- request url ----\n${requestUrl}\n--- response status ---\n${responseStatus}\n--- response text ---\n${responseText}`\n","export const startsWithWindowsDriveLetter = (string) => {\n  const firstChar = string[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n\n  const secondChar = string[1]\n  if (secondChar !== \":\") return false\n\n  return true\n}\n","export const replaceSlashesWithBackSlashes = (string) => string.replace(/\\//g, \"\\\\\")\n","import { startsWithWindowsDriveLetter } from \"./starts-with-windows-drive-letter.js\"\nimport { replaceSlashesWithBackSlashes } from \"./replace-slashes-with-backslashes.js\"\n\nexport const pathnameToOperatingSystemPath = (pathname) => {\n  if (pathname[0] !== \"/\") throw new Error(`pathname must start with /, got ${pathname}`)\n\n  const pathnameWithoutLeadingSlash = pathname.slice(1)\n  if (\n    startsWithWindowsDriveLetter(pathnameWithoutLeadingSlash) &&\n    pathnameWithoutLeadingSlash[2] === \"/\"\n  ) {\n    return replaceSlashesWithBackSlashes(pathnameWithoutLeadingSlash)\n  }\n\n  // linux mac pathname === operatingSystemFilename\n  return pathname\n}\n","import { startsWithWindowsDriveLetter } from \"./starts-with-windows-drive-letter.js\"\n\nexport const isWindowsPath = (path) => startsWithWindowsDriveLetter(path) && path[2] === \"\\\\\"\n","export const replaceBackSlashesWithSlashes = (string) => string.replace(/\\\\/g, \"/\")\n","import { isWindowsPath } from \"./is-windows-path.js\"\nimport { replaceBackSlashesWithSlashes } from \"./replace-back-slashes-with-slashes.js\"\n\nexport const operatingSystemPathToPathname = (operatingSystemPath) => {\n  if (isWindowsPath(operatingSystemPath)) {\n    return `/${replaceBackSlashesWithSlashes(operatingSystemPath)}`\n  }\n\n  // linux and mac operatingSystemFilename === pathname\n  return operatingSystemPath\n}\n","export const setNpmConfig = (configString, configObject) => {\n  return Object.keys(configObject).reduce((previous, key) => {\n    return setOrUpdateNpmConfig(previous, key, configObject[key])\n  }, configString)\n}\n\nconst setOrUpdateNpmConfig = (config, key, value) => {\n  const assignmentIndex = config.indexOf(`${key}=`)\n  if (assignmentIndex === -1) {\n    if (config === \"\") {\n      return `${key}=${value}`\n    }\n    return `${config}\n${key}=${value}`\n  }\n\n  const beforeAssignment = config.slice(0, assignmentIndex)\n  const nextLineIndex = config.indexOf(\"\\n\", assignmentIndex)\n  if (nextLineIndex === -1) {\n    return `${beforeAssignment}${key}=${value}`\n  }\n\n  const afterAssignment = config.slice(nextLineIndex)\n  return `${beforeAssignment}${key}=${value}${afterAssignment}`\n}\n","import { readFileSync, writeFileSync } from \"fs\"\nimport { exec } from \"child_process\"\nimport {\n  operatingSystemPathToPathname,\n  pathnameToOperatingSystemPath,\n} from \"@jsenv/operating-system-path\"\nimport { setNpmConfig } from \"./setNpmConfig.js\"\n\nexport const publish = async ({ projectPath, registryUrl, token, logger }) => {\n  const projectPathname = operatingSystemPathToPathname(projectPath)\n\n  const previousValue = process.env.NODE_AUTH_TOKEN\n  const restoreProcessEnv = () => {\n    process.env.NODE_AUTH_TOKEN = previousValue\n  }\n\n  const projectPackageFilePathname = `${projectPathname}/package.json`\n  const projectPackageFilePath = pathnameToOperatingSystemPath(projectPackageFilePathname)\n  const projectPackageString = String(readFileSync(projectPackageFilePath))\n  const restoreProjectPackageFile = () => {\n    writeFileSync(projectPackageFilePath, projectPackageString)\n  }\n\n  const projectNpmConfigFilePathname = `${projectPathname}/.npmrc`\n  const projectNpmConfigFilePath = pathnameToOperatingSystemPath(projectNpmConfigFilePathname)\n  let projectNpmConfigString\n  try {\n    projectNpmConfigString = String(readFileSync(projectNpmConfigFilePath))\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      projectNpmConfigString = \"\"\n    } else {\n      throw e\n    }\n  }\n  const restoreProjectNpmConfigFile = () => {\n    writeFileSync(projectNpmConfigFilePath, projectNpmConfigString)\n  }\n\n  process.env.NODE_AUTH_TOKEN = token\n\n  const projectPackageObject = JSON.parse(projectPackageString)\n  projectPackageObject.publishConfig = projectPackageObject.publishConfig || {}\n  projectPackageObject.publishConfig.registry = registryUrl\n  writeFileSync(projectPackageFilePath, JSON.stringify(projectPackageObject, null, \"  \"))\n\n  writeFileSync(\n    projectNpmConfigFilePath,\n    setNpmConfig(projectNpmConfigString, {\n      [computeRegistryTokenKey(registryUrl)]: token,\n      [computeRegistryKey(projectPackageObject.name)]: registryUrl,\n    }),\n  )\n\n  try {\n    await new Promise((resolve, reject) => {\n      const command = exec(\n        \"npm publish\",\n        {\n          cwd: projectPath,\n          stdio: \"silent\",\n        },\n        (error) => {\n          if (error) {\n            if (error.message.includes(\"EPUBLISHCONFLICT\")) {\n              // it certainly means a previous published worked\n              // but registry is still busy so when we asked\n              // for latest version is was not yet available\n              resolve()\n            } else {\n              reject(error)\n            }\n          } else {\n            resolve()\n          }\n        },\n      )\n      command.stdout.on(\"data\", (data) => {\n        logger.debug(data)\n      })\n      command.stderr.on(\"data\", (data) => {\n        // debug because this output is part of\n        // the error message generated by a failing npm publish\n        logger.debug(data)\n      })\n    })\n  } finally {\n    restoreProcessEnv()\n    restoreProjectPackageFile()\n    restoreProjectNpmConfigFile()\n  }\n}\n\nconst computeRegistryTokenKey = (registryUrl) => {\n  if (registryUrl.startsWith(\"http://\")) {\n    return `${registryUrl.slice(\"http:\".length)}/:_authToken`\n  }\n  if (registryUrl.startsWith(\"https://\")) {\n    return `${registryUrl.slice(\"https:\".length)}/:_authToken`\n  }\n  if (registryUrl.startsWith(\"//\")) {\n    return `${registryUrl}/:_authToken`\n  }\n  throw new Error(`registryUrl must start with http or https, got ${registryUrl}`)\n}\n\nconst computeRegistryKey = (packageName) => {\n  if (packageName[0] === \"@\") {\n    const packageScope = packageName.slice(0, packageName.indexOf(\"/\"))\n    return `${packageScope}:registry`\n  }\n  return `registry`\n}\n","import { readFile } from \"fs\"\nimport {\n  operatingSystemPathToPathname,\n  pathnameToOperatingSystemPath,\n} from \"@jsenv/operating-system-path\"\n\nexport const readProjectPackage = async ({ projectPath }) => {\n  if (typeof projectPath !== \"string\") {\n    throw new Error(`projectPath must be a string.\n--- project path ---\n${projectPath}`)\n  }\n\n  const projectPathname = operatingSystemPathToPathname(projectPath)\n  const packagePathname = `${projectPathname}/package.json`\n  const packagePath = pathnameToOperatingSystemPath(packagePathname)\n\n  let packageInProject\n  try {\n    const packageBuffer = await new Promise((resolve, reject) => {\n      readFile(packagePath, (error, buffer) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve(buffer)\n        }\n      })\n    })\n    const packageString = String(packageBuffer)\n    try {\n      packageInProject = JSON.parse(packageString)\n    } catch (e) {\n      if (e.name === \"SyntaxError\") {\n        throw new Error(`syntax error while parsing project package.json\n--- syntax error stack ---\n${e.stack}\n--- package.json path ---\n${packagePath}`)\n      }\n      throw e\n    }\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      throw new Error(\n        `cannot find project package.json\n--- package.json path ---\n${packagePath}`,\n      )\n    }\n    throw e\n  }\n\n  return packageInProject\n}\n","import { createLogger } from \"@jsenv/logger\"\nimport { fetchLatestInRegistry } from \"./fetchLatestInRegistry.js\"\nimport { publish } from \"./publish.js\"\nimport { readProjectPackage } from \"../readProjectPackage.js\"\n\nexport const autoPublish = async ({ projectPath, logLevel, registryMap } = {}) => {\n  const logger = createLogger({ logLevel })\n  logger.debug(`autoPublish(${JSON.stringify({ projectPath, logLevel, registryMap }, null, \"  \")})`)\n  assertRegistryMap(registryMap)\n\n  logger.debug(`reading project package.json`)\n  const packageInProject = await readProjectPackage({\n    projectPath,\n  })\n  const { name: packageName, version: packageVersion } = packageInProject\n  logger.debug(`${packageName}@${packageVersion} found in package.json`)\n\n  const toPublish = []\n  await Promise.all(\n    Object.keys(registryMap).map(async (registryUrl) => {\n      logger.debug(`fetching latest package in ${registryUrl}`)\n      const registryConfig = registryMap[registryUrl]\n      try {\n        const latestPackageInRegistry = await fetchLatestInRegistry({\n          registryUrl,\n          packageName,\n          ...registryConfig,\n        })\n        if (latestPackageInRegistry === null) {\n          logger.debug(`${packageName} never published on ${registryUrl}`)\n          toPublish.push(registryUrl)\n          return\n        }\n\n        const latestVersionOnRegistry = latestPackageInRegistry.version\n        if (latestVersionOnRegistry !== packageVersion) {\n          logger.debug(\n            `${packageName} latest version on ${registryUrl} is ${latestVersionOnRegistry}`,\n          )\n          toPublish.push(registryUrl)\n          return\n        }\n\n        logger.info(`${packageName}@${packageVersion} already published on ${registryUrl}`)\n        return\n      } catch (e) {\n        logger.error(e.message)\n        return\n      }\n    }),\n  )\n\n  // we have to publish in serie because we don't fully control\n  // npm publish, we have to enforce where the package gets published\n  await toPublish.reduce((previous, registryUrl) => {\n    return previous.then(async () => {\n      logger.info(`publishing ${packageName}@${packageVersion} on ${registryUrl}`)\n      await publish({\n        projectPath,\n        logger,\n        registryUrl,\n        ...registryMap[registryUrl],\n      })\n      logger.info(`${packageName}@${packageVersion} published on ${registryUrl}`)\n    })\n  }, Promise.resolve())\n}\n\nconst assertRegistryMap = (value) => {\n  if (typeof value !== \"object\") {\n    throw new TypeError(`registryMap must be an object.\n--- registryMap ---\n${value}`)\n  }\n\n  Object.keys(value).forEach((registryUrl) => {\n    const registryMapValue = value[registryUrl]\n    if (typeof registryMapValue !== \"object\") {\n      throw new TypeError(`found unexpected registryMap value: it must be an object.\n--- registryMap value ---\n${registryMapValue}\n--- registryMap key ---\n${registryUrl}`)\n    }\n\n    if (`token` in registryMapValue === false) {\n      throw new TypeError(`missing token in registryMap.\n--- registryMap key ---\n${registryUrl}`)\n    }\n\n    if (typeof registryMapValue.token !== \"string\") {\n      throw new TypeError(`unexpected token found in registryMap: it must be a string.\n--- token ---\n${registryMapValue.token}\n--- registryMap key ---\n${registryUrl}`)\n    }\n  })\n}\n","// https://developer.github.com/v3/git/refs/#get-a-single-reference\n\nconst fetch = import.meta.require(\"node-fetch\")\n\nexport const getGithubRelease = async ({\n  githubToken,\n  githubRepositoryOwner,\n  githubRepositoryName,\n  githubReleaseName,\n}) => {\n  const requestUrl = `https://api.github.com/repos/${githubRepositoryOwner}/${githubRepositoryName}/git/ref/tags/${githubReleaseName}`\n  const response = await fetch(requestUrl, {\n    headers: {\n      authorization: `token ${githubToken}`,\n    },\n    method: \"GET\",\n  })\n\n  const responseStatus = response.status\n\n  if (responseStatus === 404) {\n    return null\n  }\n\n  if (responseStatus !== 200) {\n    throw new Error(\n      writeUnexpectedResponseStatus({\n        requestUrl,\n        responseStatus,\n        responseText: await response.text(),\n      }),\n    )\n  }\n\n  const responseJson = await response.json()\n  return responseJson\n}\n\nconst writeUnexpectedResponseStatus = ({\n  requestUrl,\n  responseStatus,\n  responseText,\n}) => `github api response status should be 200.\n--- request url ----\n${requestUrl}\n--- response status ---\n${responseStatus}\n--- response text ---\n${responseText}`\n","// https://developer.github.com/v3/git/tags/\n\nconst fetch = import.meta.require(\"node-fetch\")\n\nexport const createGithubRelease = async ({\n  githubToken,\n  githubRepositoryOwner,\n  githubRepositoryName,\n  githubSha,\n  githubReleaseName,\n}) => {\n  const requestUrl = `https://api.github.com/repos/${githubRepositoryOwner}/${githubRepositoryName}/git/refs`\n  const body = JSON.stringify({\n    ref: `refs/tags/${githubReleaseName}`,\n    sha: githubSha,\n  })\n  const response = await fetch(requestUrl, {\n    headers: {\n      authorization: `token ${githubToken}`,\n      \"content-length\": Buffer.byteLength(body),\n    },\n    method: \"POST\",\n    body,\n  })\n\n  const responseStatus = response.status\n\n  if (responseStatus !== 201) {\n    throw new Error(\n      writeUnexpectedResponseStatus({\n        requestUrl,\n        responseStatus,\n        responseText: await response.text(),\n      }),\n    )\n  }\n\n  const responseJson = await response.json()\n  return responseJson\n}\n\nconst writeUnexpectedResponseStatus = ({\n  requestUrl,\n  responseStatus,\n  responseText,\n}) => `github api response status should be 201.\n--- request url ----\n${requestUrl}\n--- response status ---\n${responseStatus}\n--- response text ---\n${responseText}`\n","import { createLogger } from \"@jsenv/logger\"\nimport { readProjectPackage } from \"../readProjectPackage.js\"\nimport { getGithubRelease } from \"./getGithubRelease.js\"\nimport { createGithubRelease } from \"./createGithubRelease.js\"\n\nexport const autoReleaseOnGithub = async ({ projectPath, logLevel }) => {\n  const logger = createLogger({ logLevel })\n  logger.debug(`autoReleaseOnGithub(${JSON.stringify({ projectPath, logLevel }, null, \"  \")})`)\n\n  const {\n    githubToken,\n    githubRepositoryOwner,\n    githubRepositoryName,\n    githubSha,\n  } = getOptionsFromGithubAction()\n\n  logger.debug(`reading project package.json`)\n  const { packageVersion } = await getOptionsFromProjectPackage({ projectPath })\n  logger.debug(`${packageVersion} found in package.json`)\n\n  logger.debug(`search release for ${packageVersion} on github`)\n  const githubReleaseName = `v${packageVersion}`\n  const existingRelease = await getGithubRelease({\n    githubToken,\n    githubRepositoryOwner,\n    githubRepositoryName,\n    githubReleaseName,\n  })\n  if (existingRelease) {\n    logger.info(\n      `${packageVersion} already released at ${generateReleaseUrl({\n        githubRepositoryOwner,\n        githubRepositoryName,\n        githubReleaseName,\n      })}`,\n    )\n    return\n  }\n\n  logger.info(`creating release for ${packageVersion}`)\n  await createGithubRelease({\n    githubToken,\n    githubRepositoryOwner,\n    githubRepositoryName,\n    githubSha,\n    githubReleaseName,\n  })\n  logger.info(\n    `release created at ${generateReleaseUrl({\n      githubRepositoryOwner,\n      githubRepositoryName,\n      githubReleaseName,\n    })}`,\n  )\n  return\n}\n\nconst generateReleaseUrl = ({ githubRepositoryOwner, githubRepositoryName, githubReleaseName }) => {\n  return `https://github.com/${githubRepositoryOwner}/${githubRepositoryName}/releases/tag/${githubReleaseName}`\n}\n\nconst getOptionsFromGithubAction = () => {\n  const eventName = process.env.GITHUB_EVENT_NAME\n  if (!eventName) {\n    throw new Error(`missing process.env.GITHUB_EVENT_NAME, we are not in a github action`)\n  }\n  if (eventName !== \"push\") {\n    throw new Error(`getOptionsFromGithubAction must be called only in a push action`)\n  }\n\n  const githubRepository = process.env.GITHUB_REPOSITORY\n  if (!githubRepository) {\n    throw new Error(`missing process.env.GITHUB_REPOSITORY`)\n  }\n\n  const [githubRepositoryOwner, githubRepositoryName] = githubRepository.split(\"/\")\n\n  const githubToken = process.env.GITHUB_TOKEN\n  if (!githubToken) {\n    throw new Error(`missing process.env.GITHUB_TOKEN`)\n  }\n\n  const githubSha = process.env.GITHUB_SHA\n  if (!githubSha) {\n    throw new Error(`missing process.env.GITHUB_SHA`)\n  }\n\n  return {\n    githubRepositoryOwner,\n    githubRepositoryName,\n    githubToken,\n    githubSha,\n  }\n}\n\nconst getOptionsFromProjectPackage = async ({ projectPath }) => {\n  const projectPackage = await readProjectPackage({ projectPath })\n  return {\n    packageVersion: projectPackage.version,\n  }\n}\n"],"names":["LOG_LEVEL_OFF","LOG_LEVEL_DEBUG","LOG_LEVEL_INFO","LOG_LEVEL_WARN","LOG_LEVEL_ERROR","createLogger","logLevel","debug","info","warn","error","debugDisabled","infoDisabled","warnDisabled","errorDisabled","Error","createUnexpectedLogLevelMessage","console","nodeRequire","require","filenameContainsBackSlashes","__filename","indexOf","url","replace","fetch","_require","fetchLatestInRegistry","registryUrl","packageName","token","requestUrl","response","headers","accept","authorization","method","responseStatus","status","writeUnexpectedResponseStatus","responseText","text","packageObject","json","versions","latest","startsWithWindowsDriveLetter","string","firstChar","test","secondChar","replaceSlashesWithBackSlashes","pathnameToOperatingSystemPath","pathname","pathnameWithoutLeadingSlash","slice","isWindowsPath","path","replaceBackSlashesWithSlashes","operatingSystemPathToPathname","operatingSystemPath","setNpmConfig","configString","configObject","Object","keys","reduce","previous","key","setOrUpdateNpmConfig","config","value","assignmentIndex","beforeAssignment","nextLineIndex","afterAssignment","publish","projectPath","logger","projectPathname","previousValue","process","env","NODE_AUTH_TOKEN","restoreProcessEnv","projectPackageFilePathname","projectPackageFilePath","projectPackageString","String","readFileSync","restoreProjectPackageFile","writeFileSync","projectNpmConfigFilePathname","projectNpmConfigFilePath","projectNpmConfigString","e","code","restoreProjectNpmConfigFile","projectPackageObject","JSON","parse","publishConfig","registry","stringify","computeRegistryTokenKey","computeRegistryKey","name","Promise","resolve","reject","command","exec","cwd","stdio","message","includes","stdout","on","data","stderr","startsWith","length","packageScope","readProjectPackage","packagePathname","packagePath","packageInProject","packageBuffer","readFile","buffer","packageString","stack","autoPublish","registryMap","assertRegistryMap","version","packageVersion","toPublish","all","map","registryConfig","latestPackageInRegistry","push","latestVersionOnRegistry","then","TypeError","forEach","registryMapValue","getGithubRelease","githubToken","githubRepositoryOwner","githubRepositoryName","githubReleaseName","responseJson","createGithubRelease","githubSha","body","ref","sha","Buffer","byteLength","autoReleaseOnGithub","getOptionsFromGithubAction","getOptionsFromProjectPackage","existingRelease","generateReleaseUrl","eventName","GITHUB_EVENT_NAME","githubRepository","GITHUB_REPOSITORY","split","GITHUB_TOKEN","GITHUB_SHA","projectPackage"],"mappings":"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"}